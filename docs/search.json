[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"Apache License","title":"Apache License","text":"Version 2.0, January 2004 <http://www.apache.org/licenses/>","code":""},{"path":[]},{"path":"/LICENSE.html","id":"id_1-definitions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"1. Definitions","title":"Apache License","text":"“License” shall mean terms conditions use, reproduction, distribution defined Sections 1 9 document. “Licensor” shall mean copyright owner entity authorized copyright owner granting License. “Legal Entity” shall mean union acting entity entities control, controlled , common control entity. purposes definition, “control” means () power, direct indirect, cause direction management entity, whether contract otherwise, (ii) ownership fifty percent (50%) outstanding shares, (iii) beneficial ownership entity. “” (“”) shall mean individual Legal Entity exercising permissions granted License. “Source” form shall mean preferred form making modifications, including limited software source code, documentation source, configuration files. “Object” form shall mean form resulting mechanical transformation translation Source form, including limited compiled object code, generated documentation, conversions media types. “Work” shall mean work authorship, whether Source Object form, made available License, indicated copyright notice included attached work (example provided Appendix ). “Derivative Works” shall mean work, whether Source Object form, based (derived ) Work editorial revisions, annotations, elaborations, modifications represent, whole, original work authorship. purposes License, Derivative Works shall include works remain separable , merely link (bind name) interfaces , Work Derivative Works thereof. “Contribution” shall mean work authorship, including original version Work modifications additions Work Derivative Works thereof, intentionally submitted Licensor inclusion Work copyright owner individual Legal Entity authorized submit behalf copyright owner. purposes definition, “submitted” means form electronic, verbal, written communication sent Licensor representatives, including limited communication electronic mailing lists, source code control systems, issue tracking systems managed , behalf , Licensor purpose discussing improving Work, excluding communication conspicuously marked otherwise designated writing copyright owner “Contribution.” “Contributor” shall mean Licensor individual Legal Entity behalf Contribution received Licensor subsequently incorporated within Work.","code":""},{"path":"/LICENSE.html","id":"id_2-grant-of-copyright-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"2. Grant of Copyright License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable copyright license reproduce, prepare Derivative Works , publicly display, publicly perform, sublicense, distribute Work Derivative Works Source Object form.","code":""},{"path":"/LICENSE.html","id":"id_3-grant-of-patent-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"3. Grant of Patent License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable (except stated section) patent license make, made, use, offer sell, sell, import, otherwise transfer Work, license applies patent claims licensable Contributor necessarily infringed Contribution(s) alone combination Contribution(s) Work Contribution(s) submitted. institute patent litigation entity (including cross-claim counterclaim lawsuit) alleging Work Contribution incorporated within Work constitutes direct contributory patent infringement, patent licenses granted License Work shall terminate date litigation filed.","code":""},{"path":"/LICENSE.html","id":"id_4-redistribution","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"4. Redistribution","title":"Apache License","text":"may reproduce distribute copies Work Derivative Works thereof medium, without modifications, Source Object form, provided meet following conditions: () must give recipients Work Derivative Works copy License; (b) must cause modified files carry prominent notices stating changed files; (c) must retain, Source form Derivative Works distribute, copyright, patent, trademark, attribution notices Source form Work, excluding notices pertain part Derivative Works; (d) Work includes “NOTICE” text file part distribution, Derivative Works distribute must include readable copy attribution notices contained within NOTICE file, excluding notices pertain part Derivative Works, least one following places: within NOTICE text file distributed part Derivative Works; within Source form documentation, provided along Derivative Works; , within display generated Derivative Works, wherever third-party notices normally appear. contents NOTICE file informational purposes modify License. may add attribution notices within Derivative Works distribute, alongside addendum NOTICE text Work, provided additional attribution notices construed modifying License. may add copyright statement modifications may provide additional different license terms conditions use, reproduction, distribution modifications, Derivative Works whole, provided use, reproduction, distribution Work otherwise complies conditions stated License.","code":""},{"path":"/LICENSE.html","id":"id_5-submission-of-contributions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"5. Submission of Contributions","title":"Apache License","text":"Unless explicitly state otherwise, Contribution intentionally submitted inclusion Work Licensor shall terms conditions License, without additional terms conditions. Notwithstanding , nothing herein shall supersede modify terms separate license agreement may executed Licensor regarding Contributions.","code":""},{"path":"/LICENSE.html","id":"id_6-trademarks","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"6. Trademarks","title":"Apache License","text":"License grant permission use trade names, trademarks, service marks, product names Licensor, except required reasonable customary use describing origin Work reproducing content NOTICE file.","code":""},{"path":"/LICENSE.html","id":"id_7-disclaimer-of-warranty","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"7. Disclaimer of Warranty","title":"Apache License","text":"Unless required applicable law agreed writing, Licensor provides Work (Contributor provides Contributions) “” BASIS, WITHOUT WARRANTIES CONDITIONS KIND, either express implied, including, without limitation, warranties conditions TITLE, NON-INFRINGEMENT, MERCHANTABILITY, FITNESS PARTICULAR PURPOSE. solely responsible determining appropriateness using redistributing Work assume risks associated exercise permissions License.","code":""},{"path":"/LICENSE.html","id":"id_8-limitation-of-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"8. Limitation of Liability","title":"Apache License","text":"event legal theory, whether tort (including negligence), contract, otherwise, unless required applicable law (deliberate grossly negligent acts) agreed writing, shall Contributor liable damages, including direct, indirect, special, incidental, consequential damages character arising result License use inability use Work (including limited damages loss goodwill, work stoppage, computer failure malfunction, commercial damages losses), even Contributor advised possibility damages.","code":""},{"path":"/LICENSE.html","id":"id_9-accepting-warranty-or-additional-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"9. Accepting Warranty or Additional Liability","title":"Apache License","text":"redistributing Work Derivative Works thereof, may choose offer, charge fee , acceptance support, warranty, indemnity, liability obligations /rights consistent License. However, accepting obligations, may act behalf sole responsibility, behalf Contributor, agree indemnify, defend, hold Contributor harmless liability incurred , claims asserted , Contributor reason accepting warranty additional liability. END TERMS CONDITIONS","code":""},{"path":"/LICENSE.html","id":"appendix-how-to-apply-the-apache-license-to-your-work","dir":"","previous_headings":"","what":"APPENDIX: How to apply the Apache License to your work","title":"Apache License","text":"apply Apache License work, attach following boilerplate notice, fields enclosed brackets [] replaced identifying information. (Don’t include brackets!) text enclosed appropriate comment syntax file format. also recommend file class name description purpose included “printed page” copyright notice easier identification within third-party archives.","code":"Copyright [yyyy] [name of copyright owner]  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at    http://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Alex Deckmyn. Maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Deckmyn (2023). meteogrid: Gridded meteorological data. R package version 3.9.3, https://github.com/harphub/meteogrid.","code":"@Manual{,   title = {meteogrid: Gridded meteorological data},   author = {Alex Deckmyn},   year = {2023},   note = {R package version 3.9.3},   url = {https://github.com/harphub/meteogrid}, }"},{"path":"/index.html","id":"meteogrid","dir":"","previous_headings":"","what":"Gridded meteorological data","title":"Gridded meteorological data","text":"toolbox working viewing gridded (meteorological) data meteogrid (used called geogrid 2018) toolbox gridded data, mainly focussed meteorological (model) data. offers tools visualisation, interpolation etc. contain routines decoding binary data formats. Therefore, meteogrid typically used together Rgrib2 (package GRIB decoding) possibly Rfa (internal ACCORD consortium).","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Gridded meteorological data","text":"installation requires first install PROJ library map projections. may obtained http://proj.org","code":"# install.packages(\"remotes\") remotes::install_github(\"harphub/meteogrid\")"},{"path":"/reference/DomainExtent.html","id":null,"dir":"Reference","previous_headings":"","what":"Finding the (Lat-Lon) extent of a domain. — DomainExtent","title":"Finding the (Lat-Lon) extent of a domain. — DomainExtent","text":"function returns basic dimensions domain.","code":""},{"path":"/reference/DomainExtent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Finding the (Lat-Lon) extent of a domain. — DomainExtent","text":"","code":"DomainExtent(geo)"},{"path":"/reference/DomainExtent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Finding the (Lat-Lon) extent of a domain. — DomainExtent","text":"geo May either geofield object domain     descrtiption (attributes(x,\"domain\").","code":""},{"path":"/reference/DomainExtent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Finding the (Lat-Lon) extent of a domain. — DomainExtent","text":"result list elements: lonlim,latlim extreme longitude latitude values       domain. clonlat (lon,lat) center domain. x0,x1,y0,y1 SW NE points domain projection       co-ordinates. dx,dy interval grid points meters. nx,ny number points X Y direction.","code":""},{"path":[]},{"path":"/reference/DomainPoints.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Lat-Lon (or X-Y) coordinates of all grid points. — DomainPoints","title":"Find Lat-Lon (or X-Y) coordinates of all grid points. — DomainPoints","text":"function returns co-ordinates grid   points given geofield domain.","code":""},{"path":"/reference/DomainPoints.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Lat-Lon (or X-Y) coordinates of all grid points. — DomainPoints","text":"","code":"DomainPoints(geo,type='lalo')"},{"path":"/reference/DomainPoints.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Lat-Lon (or X-Y) coordinates of all grid points. — DomainPoints","text":"geo May either geofield object domain     descrtiption (attributes(x,\"domain\"). type Default \"lalo\": Lat-Lon co-ordinates grid     points. Alternative \"xy\" may useful     projected grids. returns X-Y co-ordinates grid points     appear graph.","code":""},{"path":"/reference/DomainPoints.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find Lat-Lon (or X-Y) coordinates of all grid points. — DomainPoints","text":"list containing 2 real-valued matrices lon  lat (x y)..","code":""},{"path":[]},{"path":"/reference/DrawLatLon.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a grid of meridians and latitude lines. — DrawLatLon","title":"Add a grid of meridians and latitude lines. — DrawLatLon","text":"function adds grid lat/lon lines existing plot.","code":""},{"path":"/reference/DrawLatLon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a grid of meridians and latitude lines. — DrawLatLon","text":"","code":"DrawLatLon(nx=9, ny=9, lines = TRUE, labels = TRUE, lab.size = 1,             col = \"grey\", lty = 2, font = 2, lab.x = 2, lab.y = 2,             npoints = 500, ...)"},{"path":"/reference/DrawLatLon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a grid of meridians and latitude lines. — DrawLatLon","text":"nx,ny (approximate) number lines drawn. lines, labels labels=TRUE, latitude longitude values printed bottom left map. lines=TRUE, grid lines drawn plot. FALSE nothing happens, point... col, lty, lab.size, font, lab.x, lab.y Graphical parameters. npoints number points used draw every meridian latitude line. lines curved plot high resolution, increasing give smoother lines. ... graphical parameters.","code":""},{"path":"/reference/DrawLatLon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a grid of meridians and latitude lines. — DrawLatLon","text":"Lines constant latitude longitude added current map. lines regular intervals appropriate values get aproximately wanted number lines.","code":""},{"path":[]},{"path":"/reference/Make.domain.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a geographic grid. — Make.domain","title":"Create a geographic grid. — Make.domain","text":"function returns geodomain   given parameters.","code":""},{"path":"/reference/Make.domain.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a geographic grid. — Make.domain","text":"","code":"Make.domain(projtype=\"lambert\", clonlat, nxny, dxdy, exey=NULL,             reflat=clonlat[2],reflon=clonlat[1],tilt=0, earth=list(R = 6371229)) Make.domain.RLL(Lon1, Lat1, SPlon, SPlat, SPangle=0, nxny, dxdy)"},{"path":"/reference/Make.domain.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a geographic grid. — Make.domain","text":"projtype projection type. Possible values     \"lambert\",\"mercator\", \"omerc\" (oblique     mercator) \"lalo\". clonlat c(lon,lat) co-ordinates center point domain. nxny c(nx,ny) number grid points, .e. dimensions     required grid. dxdy resolution meter. lat-lon projection, unit     (decimal) degrees. exey Extension zone (ref. ALADIN domains). added attribute influence domain . domain later saved FA format, added grid dimensions. reflat reference latitude projection. reflon reference longitude projection. tilt rotated mercator. Lon1,Lat1,SPlon,SPlat,SPangle HIRLAM-style rotated LatLon grid: rotation South Pole. earth earth shape description (proj4 format). Default sperical earth .","code":""},{"path":"/reference/Make.domain.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a geographic grid. — Make.domain","text":"geodomain domain. Make.RLL special function Rotated LatLon using HIRLAM conventions, require location rotated South Pole.","code":""},{"path":"/reference/Make.domain.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a geographic grid. — Make.domain","text":"","code":"## Not run: if (FALSE) { newdom <- Make.domain(\"lambert\",clonlat=c(50.5,3.5),nxny=c(128,128),dxdy=c(8500,8500),reflon=50.5,reflat=3.5) plot(newdom,add=FALSE) } ## End(Not run)"},{"path":"/reference/antipolygon.html","id":null,"dir":"Reference","previous_headings":"","what":"Colour everything outside a given polygon. — antipolygon","title":"Colour everything outside a given polygon. — antipolygon","text":"routine inverse 'polygon': colours everything outside given polygnon. may useful e.g. blanking plot outside certain borders. routine quite simple may work circumstances.","code":""},{"path":"/reference/antipolygon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Colour everything outside a given polygon. — antipolygon","text":"","code":"antipolygon(data,xylim=DomainExtent(.Last.domain()), bg='white')"},{"path":"/reference/antipolygon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Colour everything outside a given polygon. — antipolygon","text":"data polygon (x y columns). bg Colour use. xylim Boundaries 'antipolygon'. Usually boundaries presentt plot.","code":""},{"path":"/reference/antipolygon.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Colour everything outside a given polygon. — antipolygon","text":"antipolygon() works adding 4 corner points polygon, thus 'inverting' .","code":""},{"path":[]},{"path":"/reference/antipolygon.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Colour everything outside a given polygon. — antipolygon","text":"","code":"if (FALSE) { mask <- project(map(\"world\",\"Belgium\",fill=0,plot=FALSE)) xylim <- DomainExtent(datafield) antipolygon(mask,xylim=xylim) }"},{"path":"/reference/domainbox.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw contour of a geodomain — domainbox","title":"Draw contour of a geodomain — domainbox","text":"Function adding outline geographical domain current plot.","code":""},{"path":"/reference/domainbox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw contour of a geodomain — domainbox","text":"","code":"domainbox(geo, add.dx=TRUE, npoints=200, ...)"},{"path":"/reference/domainbox.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw contour of a geodomain — domainbox","text":"geo geodomain object. object (like geofield) thta domain attribute. add.dx Usually, co-ordinates centers grid boxes, corners. add dx/2 get full plot window. Set FALSE cases. npoints number points used define 4 edges. lines curved plot high resolution, may want increase number get smoother lines. ... Graphical parameters.","code":""},{"path":"/reference/domainbox.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw contour of a geodomain — domainbox","text":"outline domain added pre-existing plot. projection , may square, otherwise re-projected.","code":""},{"path":[]},{"path":"/reference/geodomain.html","id":null,"dir":"Reference","previous_headings":"","what":"Geodomain data class — geodomain","title":"Geodomain data class — geodomain","text":"main object class geographical domains (grids), described projection grid.","code":""},{"path":"/reference/geodomain.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Geodomain data class — geodomain","text":"","code":"# S3 method for geodomain print(x, ...) is.geodomain(x) compare.geodomain(x,y,eps=1e-10)"},{"path":"/reference/geodomain.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Geodomain data class — geodomain","text":"x,y geodomain class objects. eps Maximal numerical de=ifference allowed 'identical' values. ... used.","code":""},{"path":"/reference/geodomain.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Geodomain data class — geodomain","text":"geodomain class consists list describe regular gridded domain. object list following elements: projectionDetails grid's projection. list proj.4 parameters. nx,nyNumber gridpoints SW,NE(Longitude,Latitude) pairs describing two outer cornes grid. dx,dyGrid resolution. Either degrees (LatLon grid) meter (projected grid). missing, can fact calculated components. compare.geodomain compares two domains numerically returns TRUE equal. reliable. .geodomain simple shortcut.","code":""},{"path":[]},{"path":"/reference/geofield.html","id":null,"dir":"Reference","previous_headings":"","what":"Geofield class format — geofield","title":"Geofield class format — geofield","text":"main object class gridded data. Consists matrix number attributes.","code":""},{"path":"/reference/geofield.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Geofield class format — geofield","text":"","code":"as.geofield(x=NA, domain, time = \"\", info = list())  is.geofield(x) # S3 method for geofield print(x, ...)"},{"path":"/reference/geofield.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Geofield class format — geofield","text":"x data matrix. vecor (single value), cast matrix dimensions required domain. domain geodomain describe domain exactly dimensions x. time, info Time list information added attributes resulting geofield object. ... used.","code":""},{"path":"/reference/geofield.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Geofield class format — geofield","text":".geofield returns TRUE x geofield object. .geofield returns geofield object. x matrix domain specified, added attribute.","code":""},{"path":"/reference/geofield.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Geofield class format — geofield","text":"geofield class consists data matrix attributes describe domain field value. object data matrix   following attributes: domainThe domain description, geodomain class object. list elements:     projection: Details grid's projection.\\     nx,ny: Number gridpoints     SW,NE: (Latitude,Longitude) pairs describing outer cornes grid. timeDate time information data field. infoOther information.","code":""},{"path":[]},{"path":"/reference/geowind.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert wind components from model axes to geographic E/N axes. — geowind","title":"Convert wind components from model axes to geographic E/N axes. — geowind","text":"Convert model wind projection Lat/Lon axes (back) using map factor. mainly important calculating wind direction. Lambert, Rotated LatLon, rotated Mercator Polar Stereogrphic projections supported.","code":""},{"path":"/reference/geowind.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert wind components from model axes to geographic E/N axes. — geowind","text":"","code":"geowind(u, v, inv=FALSE, init=NULL) geowind.init(domain)"},{"path":"/reference/geowind.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert wind components from model axes to geographic E/N axes. — geowind","text":"u, v u v components model wind. must geofield objects vectors identical length. inv inv=TRUE, vector rotated N/E back grid axes. init Either NULL list components mapfactor angle (e.g. output geowind.init). u, v geofields, init can NULL (angle can longer calculated). components must dimension u, v. init=NULL, local rotation angle map factor calculated prior calculating rotated wind vectors. domain geofield geodomain object.","code":""},{"path":"/reference/geowind.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert wind components from model axes to geographic E/N axes. — geowind","text":"list components U,V type input. wind vector rotated geographical N/E axes, inverse. geowind.init returns list components angle,mapfactor can serve init value later calls geowind.","code":""},{"path":"/reference/geowind.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert wind components from model axes to geographic E/N axes. — geowind","text":"geowind.init() merely meant means save computation time correction must done many times.","code":""},{"path":[]},{"path":"/reference/getmask.html","id":null,"dir":"Reference","previous_headings":"","what":"Domain map and boundaries. — getmask","title":"Domain map and boundaries. — getmask","text":"routines return map (polygons) drawing plot. inversei.e. sea becomes inside polygons, e.g. erase values sea.","code":""},{"path":"/reference/getmask.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Domain map and boundaries. — getmask","text":"","code":"getmap(domain=.Last.domain(), interior=TRUE,                     fill=FALSE, map.database=\"world\") getbox(domain=.Last.domain()) getmask(domain=.Last.domain(), map.database=\"world\")"},{"path":"/reference/getmask.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Domain map and boundaries. — getmask","text":"domain geodomain interior Draw interior (political) country borders. fill Return map polygons, simple lines. map.database map database used.","code":""},{"path":"/reference/getmask.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Domain map and boundaries. — getmask","text":"getmask depends sf package.","code":""},{"path":[]},{"path":"/reference/getmask.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Domain map and boundaries. — getmask","text":"","code":"if (FALSE) {   iview(myfield, fill=TRUE)   plot(getmask(), col=\"white\", border=1, add=TRUE)   }"},{"path":"/reference/gridpoints.html","id":null,"dir":"Reference","previous_headings":"","what":"Indicate grid points on the current image. — gridpoints","title":"Indicate grid points on the current image. — gridpoints","text":"little function return co-ordinates put marker given grid points.   essentially ase points, accepts grid indices   stead geographical co-ordinates.","code":""},{"path":"/reference/gridpoints.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Indicate grid points on the current image. — gridpoints","text":"","code":"gridpoints(x, y=NULL, ...)"},{"path":"/reference/gridpoints.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Indicate grid points on the current image. — gridpoints","text":"x,y Grid indices (column row) points plot. Either     2 vectors, 2-column matrix. ... Graphical parameters generic points function.","code":""},{"path":"/reference/gridpoints.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Indicate grid points on the current image. — gridpoints","text":"list following members: data value field chosen grid point. x,y actual coordinates chosen grid point. ,j matrix indices chosen grid point.","code":""},{"path":[]},{"path":"/reference/iview.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualisation shortcuts — iview","title":"Visualisation shortcuts — iview","text":"Routines visualisation meteogrid objects. use meteogrid methods image, contour, fcontour vecplot.","code":""},{"path":"/reference/iview.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualisation shortcuts — iview","text":"","code":"iview(x,nlevels=15,color.palette=irainbow,       levels=pretty(x[1:gdomain$nx,1:gdomain$ny], nlevels),       col=color.palette(length(levels)-1),       title=paste(attr(x,\"info\")$name,\"\\n\",attr(x,\"time\")),       legend=FALSE, mask=NULL, na.col=par(\"bg\"),       drawmap=TRUE, maplwd=.5, mapcol='black', map.database='world',       interior=TRUE, fill=FALSE, ...) cview(x,nlevels=15,       title=paste(attr(x,\"info\")$name,\"\\n\",attr(x,\"time\")),       mask=NULL, add=FALSE,       drawmap=!add, maplwd=.5, mapcol=\"black\", map.database=\"world\",       interior=TRUE, fill=FALSE, ...) fcview(x,nlevels=15,color.palette=irainbow,        levels=pretty(x[1:gdomain$nx,1:gdomain$ny], nlevels),        col=color.palette(length(levels)-1),        title=paste(attr(x,\"info\")$name,\"\\n\",attr(x,\"time\")),        legend=TRUE,mask=NULL,        drawmap=TRUE, maplwd=.5, mapcol='black', map.database='world',       interior=TRUE, fill=FALSE, ...) vview(U, V, add=FALSE, aspcorrect=TRUE,       drawmap=TRUE, maplwd=.5, mapcol=\"black\", map.database='world',       interior=TRUE, fill=FALSE, ...)"},{"path":"/reference/iview.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualisation shortcuts — iview","text":"x geofield object. U,V geofield objects interpreted U V components wind field. nlevels Number (colour) levels. may also give levels explicitely. color.palette Colours levels. levels fixed set breaks. levels defined, nlevels ignored. missing, value range devided approximately nlevels breaks. col fixed vector colours. provided, length must exactly equal length(levels)-1. practicle define also fixed set levels. title Title plot. add TRUE, plot superposed current image, mask Defines mask grid points mask==FALSE set NA. mask may matrix dimension x, expression involving x, even string parsed uses 'x' represent data. na.col default, masked grid points (NA values) transparent. na.col can give another colour. legend TRUE, color legend drawn right image. drawmap TRUE, world map superposed image. fill TRUE, map drawn filled polygons, just lines. interesting contours vectors, may rare cases used images, colours transparent. interior FALSE, interior political borders drawn. maplwd, mapcol Line width colour world map. map.database map data use. Default 'world' maps package. aspcorrect Lat/Lon co-ordinates, aspect ratio 1:1. argument TRUE, correction attempted. projections, argument ignored. ... options limage, vecplot contour.","code":""},{"path":"/reference/iview.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualisation shortcuts — iview","text":"image (iview), contour (cview) filled contour   (fcview) plot data, overlaid geographical boundaries. vview plots vector field (e.g. wind).","code":""},{"path":"/reference/iview.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Visualisation shortcuts — iview","text":"functions fact simple \"wrappers\" general   functions limage etc. (...) indicates   parameter accepted functions.","code":""},{"path":[]},{"path":"/reference/iview.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualisation shortcuts — iview","text":"","code":"if (FALSE) { # mask as a string that is evaluated literally (x is the input data) iview(x=field,mask=\"x>0\") # all negative values are left blank # mask as an expression, assuming lsm is a known geofield iview(x=field,mask=lsm) # all points where lsm=FALSE are left blank }"},{"path":"/reference/laloclick.html","id":null,"dir":"Reference","previous_headings":"","what":"Click on the map and get the Lat-Lon co-ordinates. — laloclick","title":"Click on the map and get the Lat-Lon co-ordinates. — laloclick","text":"command caqn click n times map, get Lat-Lon co-ordinates points.","code":""},{"path":"/reference/laloclick.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Click on the map and get the Lat-Lon co-ordinates. — laloclick","text":"","code":"laloclick(n=1, ...)"},{"path":"/reference/laloclick.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Click on the map and get the Lat-Lon co-ordinates. — laloclick","text":"n Number points clicked. ... arguments 'locator'.","code":""},{"path":"/reference/laloclick.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Click on the map and get the Lat-Lon co-ordinates. — laloclick","text":"matrix dim(n,2) containing longitude latitude.","code":""},{"path":[]},{"path":"/reference/laloclick.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Click on the map and get the Lat-Lon co-ordinates. — laloclick","text":"","code":"if (FALSE) { lalo <- laloclick(2)   # lalo now contains the co-ordinates points(proj4(lalo),pch='x')   # indicate the points on the present map. }"},{"path":"/reference/lalopoint.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the grid point that is closest to given co-ordinates. — lalopoint","title":"Find the grid point that is closest to given co-ordinates. — lalopoint","text":"given grid, point closest (Lon,Lat) co-ordinates   found. function obsolete. Use point.interp.","code":""},{"path":"/reference/lalopoint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the grid point that is closest to given co-ordinates. — lalopoint","text":"","code":"lalopoint(geo, lon, lat, minimise='proj', mask=NULL)"},{"path":"/reference/lalopoint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the grid point that is closest to given co-ordinates. — lalopoint","text":"geo geofield, FAfile, geodomain, FAframe object. lon,lat longitude latitude. minimise \"distance\" minimise: can 'lalo' (minimise lat-lon) 'proj' (minimise geographical distance projection). mask Take closest point mask==TRUE.","code":""},{"path":"/reference/lalopoint.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the grid point that is closest to given co-ordinates. — lalopoint","text":"list following members: data value field chosen grid point. data geofield, set NA. lonlat actual coordinates chosen grid point. index matrix indices chosen grid point.","code":""},{"path":[]},{"path":"/reference/limage.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualisation of gridded data. — limage","title":"Visualisation of gridded data. — limage","text":"function merges possibilities image filled.contour, adds flexible legend.","code":""},{"path":"/reference/limage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualisation of gridded data. — limage","text":"","code":"limage(x=1:dim(z)[1],y=1:dim(z)[2],z,smooth=FALSE,            nlevels=15,levels=pretty(zlim,nlevels),            color.palette=colorRampPalette(c(\"blue\",\"white\",\"red\")),            col=color.palette(length(levels)-1), na.col=par(\"bg\"),            legend=FALSE,legend.cex=.7,            legend.width=1/12,legend.sep=c(1/4,1/2),            legend.skip=1,legend.digits=5,            plot.title,title.adjust=TRUE,            legend.title,            asp=1, useRaster=TRUE, ...)"},{"path":"/reference/limage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualisation of gridded data. — limage","text":"x,y Vectors regularly spaced co-ordinates. z Matrix data values plotted. smooth FALSE, image consists actual grid boxes (cfr. image), TRUE values smoothed (cfr. filled.contour). Note first case, domain size extended half grid interval directions! asp Aspect ratio axes. Default 1. case   Lat-Lon map, warning issued, Lat Lon degrees   proportional general. nlevels, levels Number levels (assumed evenly distributed) explicit break points. color.palette color palette use plot. na.col used smooth=FALSE. Sets alternative colour NA values. legend TRUE, legend added right image. Note case title image -centre title.adjust=FALSE. legend.width fraction plot region occupied xlegend. Must smaller 1. legend.sep vector 2 elements describes fraction legend width occupied color strip . Default c(1/4,2/4). legend.cex scaling legend. Default 0.6 . legend.skip integer >=1. legend, numerical values given explicitely interval legend.skip. many levels, may want set larger value. legend.title, plot.title options define main title optional title legend. given simply character string, form title command, e.g. legend.title=title(main=\"legend\"). way, can also subtitle etc. chooose write legend title. useRaster good option 'image'. postscript output much better. may problem graphical drivers. col, legend.digits, title.adjust fine-tuning plot. ... graphical parameters e.g. image, ...","code":""},{"path":"/reference/limage.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Visualisation of gridded data. — limage","text":"also shortcuts iview, fcview go little adding geographical aspects like map boundaries different colour defaults.","code":""},{"path":[]},{"path":"/reference/map.restrict.html","id":null,"dir":"Reference","previous_headings":"","what":"Restrict map to plot domain — map.restrict","title":"Restrict map to plot domain — map.restrict","text":"function clips set map boundaries exactly plot domain.","code":""},{"path":"/reference/map.restrict.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Restrict map to plot domain — map.restrict","text":"","code":"map.restrict(bxy,xlim,ylim,xperiod=NA_real_,xfrac=0.5,yperiod=NA_real_,yfrac=NA_real_) periodicity(domain=.Last.domain())"},{"path":"/reference/map.restrict.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Restrict map to plot domain — map.restrict","text":"bxy Number points clicked. xlim,ylim Min/max values domain. xperiod, xfrac, yperiod, yfrac Uually, x axis may periodic certain projections. xperiod numerical value total map projection (domain may smaller). jump larger xfrac * xperiod assumed passing boundaries thus clipped. domain geodomain.","code":""},{"path":"/reference/map.restrict.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Restrict map to plot domain — map.restrict","text":"Usually, user never use functions directly, available just case. periodicity simple function guesses periodicity map, map.restrict clips map correct boundaries.","code":""},{"path":[]},{"path":"/reference/map.restrict.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Restrict map to plot domain — map.restrict","text":"","code":"if (FALSE) { lalo <- laloclick(2)   # lalo now contains the co-ordinates points(proj4(lalo),pch='x')   # indicate the points on the present map. }"},{"path":"/reference/obsplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot point values on a map with a colour function. — obsplot","title":"Plot point values on a map with a colour function. — obsplot","text":"Add coloured markers observations existing map.","code":""},{"path":"/reference/obsplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot point values on a map with a colour function. — obsplot","text":"","code":"obsplot(x,y,z,breaks=5,pretty=TRUE,legend.pos=NULL,         add=TRUE,domain=.Last.domain(),col=irainbow,...)"},{"path":"/reference/obsplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot point values on a map with a colour function. — obsplot","text":"x,y Vectors co-ordinates. y missing, x suposed two columns x y. z Vector data (length x y). breaks number breaks colour code. pretty TRUE, breaks chosen 'nice' values. legend.pos Legend position. add TRUE, add current plot. Otherwise, start new plot dmain. domain default, last plotted domain. col Colour scheme. ... Options 'points'.","code":""},{"path":"/reference/obsplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot point values on a map with a colour function. — obsplot","text":"set points plotted x,y points, colour taken chosen colour scheme. return value (hidden) list wit hthe projected x,y points, data values, levels colours.","code":""},{"path":[]},{"path":"/reference/orthoglobe.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw a global map in orthorombic projection. — orthoglobe","title":"Draw a global map in orthorombic projection. — orthoglobe","text":"routine simply drwas world map may useful background data.","code":""},{"path":"/reference/orthoglobe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw a global map in orthorombic projection. — orthoglobe","text":"","code":"orthoglobe(reflon=0,reflat=90,map.database='world',...)"},{"path":"/reference/orthoglobe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw a global map in orthorombic projection. — orthoglobe","text":"reflon, reflat Pole location projection. map.database Map database. ... Options 'plot' (colour, line type etc.).","code":""},{"path":[]},{"path":"/reference/palettes.html","id":null,"dir":"Reference","previous_headings":"","what":"Colour paletes for images. — palettes","title":"Colour paletes for images. — palettes","text":"simple colour palettes may used images.","code":""},{"path":"/reference/palettes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Colour paletes for images. — palettes","text":"","code":"col.oro(n)"},{"path":"/reference/palettes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Colour paletes for images. — palettes","text":"n Integer: number colours. irainbow grainbow accept negative values, case order reversed.","code":""},{"path":"/reference/palettes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Colour paletes for images. — palettes","text":"functions return vector n colours span chosen colour palette. col.cloud bit special, actually returns transparancy values. grainbow kind stupid name grey-scaling. irainbow grainbow accept negative values n, case order reversed. best results, functions require RColorBrewer. available, similar choice made standard colours.","code":""},{"path":"/reference/plot.geodomain.html","id":null,"dir":"Reference","previous_headings":"","what":"Plotting a map for a given domain. — plot.geodomain","title":"Plotting a map for a given domain. — plot.geodomain","text":"function plots country borders given domain.","code":""},{"path":"/reference/plot.geodomain.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plotting a map for a given domain. — plot.geodomain","text":"","code":"# S3 method for geodomain plot(x=.Last.domain(), add=FALSE,               col=1, mapfill=c(\"sandybrown\",\"steelblue\"),               add.dx=TRUE, box=TRUE,               fill=FALSE, interior=TRUE,               map.database=\"world\", asp=1, ...) # S3 method for geofield plot(x, ...)"},{"path":"/reference/plot.geodomain.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plotting a map for a given domain. — plot.geodomain","text":"x object geofield geodomain class. Default last domain plotted. col Colour map contours. mapfill Colour(s) used fill=TRUE fill map contours. First colour internal (land), second background (sea), happens add=FALSE). fill TRUE, map drawn coloured polygons, just lines. interior FALSE, physical land boundaries shown, interior political borders. map.database character string map database. Default 'world' maps package. add.dx TRUE, domain size extended half grid interval directions, .e. co-ordinates treated centers grid boxes. box TRUE, rectangular box drawn around domain. add TRUE, plot superposed current plot. asp Aspect ratio. considered add=TRUE. Lat/Lon domains, NULL may better choice!. ... standard graphical parameters.","code":""},{"path":"/reference/plot.geodomain.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plotting a map for a given domain. — plot.geodomain","text":"plot methods plot map. geofield objects various functions plot actual data.","code":""},{"path":[]},{"path":"/reference/plot.geodomain.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plotting a map for a given domain. — plot.geodomain","text":"","code":"if (FALSE) { ttt <- FAdec(...) ### to plot the domain of ttt (not the data itself): plot(ttt, mapreso=.01, add=FALSE) }"},{"path":"/reference/point.interp.html","id":null,"dir":"Reference","previous_headings":"","what":"Approximate field values at given Lat-Lon co-ordinates. — point.interp","title":"Approximate field values at given Lat-Lon co-ordinates. — point.interp","text":"Approximate field values given Lat-Lon co-ordinates. Either interpolation taking closest grid point value. .init routines allow calculate interpolation weights . routines different methods called explicitely. principle, call point.interp point.interp.init specify method.","code":""},{"path":"/reference/point.interp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Approximate field values at given Lat-Lon co-ordinates. — point.interp","text":"","code":"point.interp(infield, lon, lat, method=\"bilin\", mask=NULL, pointmask=NULL, force=FALSE, weights=NULL) point.interp.init(domain=.Last.domain(), lon, lat, method=\"bilin\", mask=NULL, pointmask=NULL, force=FALSE) point.index(domain=.Last.domain(), lon, lat, clip=TRUE) point.closest(infield, lon, lat, mask=NULL, pointmask=NULL, force=FALSE, weights=NULL) point.closest.init(domain=.Last.domain(), lon, lat, mask=NULL, pointmask=NULL, force=FALSE) point.bilin(infield, lon, lat, mask=NULL, pointmask=NULL, force=FALSE, weights=NULL) point.bilin.init(domain=.Last.domain(), lon, lat, mask=NULL, pointmask=NULL, force=FALSE) point.bicubic(infield, lon, lat, weights=NULL) point.bicubic.init(domain=.Last.domain(), lon, lat)"},{"path":"/reference/point.interp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Approximate field values at given Lat-Lon co-ordinates. — point.interp","text":"infield geofield object. geodomain interested initialising weights. domain geodomain geofield object. .init routines may called domain specification, weights depend field values. geofield provided, domain attribute taken. lon vector longitues. lat vector latitudes (length lon). method Can \"bilin\", \"bicubic\" \"closest\". weights weights result point.[method].init routines. provided, weights re-calculated. interpolation many fields, often faster initialise use weights. mask matrix domain, indicating points masked interpolation. Usually land/sea mask. Maks supported bicubic interpolation. pointmask optional vector can used combination mask points actually meant interpolated masked points (e.g. temperature sea). Default vector constant value 1 points. force using mask, possible 4 points masked . force=TRUE, output set NA. default avoid revert using 4 points interpolation. clip TRUE, fractional indices lower 0.5 higher gridsize+0.5 set NA. FALSE, points outside domain still get interpolated value.","code":""},{"path":"/reference/point.interp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Approximate field values at given Lat-Lon co-ordinates. — point.interp","text":"point.interp() returns vector containing interpolated values given co-ordinates. point.index returns (fractional) matrix indices, may interest. point.interp.init() returns list interpolation weights can used speed future calls.","code":""},{"path":"/reference/point.interp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Approximate field values at given Lat-Lon co-ordinates. — point.interp","text":"point.bilin etc. called main routine point.interp, depending chosen method. really call explicitely.","code":""},{"path":[]},{"path":"/reference/point.interp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Approximate field values at given Lat-Lon co-ordinates. — point.interp","text":"","code":"if (FALSE) { w1 <- point.interp.init(lon, lat, domain=.Last.domain(), method=\"bilin\") f1 <- point.interp(lon, lat, infield, weights=w1, method=\"bilin\") }"},{"path":"/reference/proj4.str2list.html","id":null,"dir":"Reference","previous_headings":"","what":"Change proj4 strings to list and back. — proj4.str2list","title":"Change proj4 strings to list and back. — proj4.str2list","text":"routines reformat proj4 projection string list arguments vice versa.","code":""},{"path":"/reference/proj4.str2list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change proj4 strings to list and back. — proj4.str2list","text":"","code":"proj4.str2list(pp) proj4.list2str(pp)"},{"path":"/reference/proj4.str2list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change proj4 strings to list and back. — proj4.str2list","text":"pp proj4 projection, either single character string list named arguments.","code":""},{"path":"/reference/proj4.str2list.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Change proj4 strings to list and back. — proj4.str2list","text":"proj.4 strings almost ubiquitous definitions projections. Internally, meteogrid works list arguments rather single character strings. functions provide simple conversion two formats.","code":""},{"path":[]},{"path":"/reference/project.html","id":null,"dir":"Reference","previous_headings":"","what":"Projections — project","title":"Projections — project","text":"wrapper calling proj4 code standard projections.","code":""},{"path":"/reference/project.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Projections — project","text":"","code":"project(x, y, proj=.Last.domain()$projection, inv=FALSE)"},{"path":"/reference/project.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Projections — project","text":"x,y Longitude latitude values (inv=FALSE) projected values (inv=TRUE). two vectors must equal length. NA's allowed. y missing, x expected vector length 2 two columns. proj proj4 projection description, given list. future, single projection string may also supported. Default value projection last geodomain plotted. inv TRUE indicates inverse projection","code":""},{"path":"/reference/project.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Projections — project","text":"data.frame columns x y.","code":""},{"path":"/reference/project.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Projections — project","text":"routine calls proj.4 library geographical projections. Longitude latitude values always (decimal) degrees, radians.","code":""},{"path":"/reference/regrid.html","id":null,"dir":"Reference","previous_headings":"","what":"Interpolating to another domain — regrid","title":"Interpolating to another domain — regrid","text":"Using spatial interpolation   function transforms geofield another geometry.","code":""},{"path":"/reference/regrid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interpolating to another domain — regrid","text":"","code":"regrid(infield, newdomain=.Last.domain(),        method=\"bilin\", mask=NULL, newmask=NULL, weights=NULL) regrid.init(olddomain, newdomain=.Last.domain(),             method=\"bilin\", mask=NULL, newmask=NULL)"},{"path":"/reference/regrid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interpolating to another domain — regrid","text":"infield geofield object. olddomain geodomain object. may aso geofield, domain attribute used initialising interpolation. newdomain geodomain geofield. second case, new domain attribute taken second field. default value .Last.domain(), last domain plotted. # ... Options point.interp. method interpolation method can bilinear (\"bilin\"), bicubic (\"bicub\") nearest neighbour (\"n\" \"c\"). Additionally, two methods upscaling: \"mean\" \"median\" (latter yet implemented). mask, newmask mask (grid dimension infield), points value 0 (FALSE) used interpolation. must provide old new grid. weights Output regrid.init. providing weights, can save lot time many fields need interpolation.","code":""},{"path":"/reference/regrid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interpolating to another domain — regrid","text":"geofield object.","code":""},{"path":"/reference/regrid.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Interpolating to another domain — regrid","text":"routine uses interpolation transform data   new domain (instance, different grid resolution, different projection...). use Land/Sea masks, possible \"land\" point new domain lies 4 \"sea\" points original domain. case, mask applied (interpolation uses force=FALSE).","code":""},{"path":[]},{"path":"/reference/regrid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interpolating to another domain — regrid","text":"","code":"if (FALSE) { regrid(field1,field2) # this will output the data of field1 interpolated to the grid of field 2  iview(field1) cview(regrid(field2),add=TRUE) # add contours of field2, interpolated to the last plotted grid, which is field1. }"},{"path":"/reference/subgrid.html","id":null,"dir":"Reference","previous_headings":"","what":"Defining subdomains — subgrid","title":"Defining subdomains — subgrid","text":"functions may used define subdomains (.e.   rectangular subset grid points) geofield domain.","code":""},{"path":"/reference/subgrid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Defining subdomains — subgrid","text":"","code":"subgrid(geo, x1, x2, y1, y2, reso = 1)  zoomgrid(geo, x, y, zoom = 50)"},{"path":"/reference/subgrid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Defining subdomains — subgrid","text":"geo geofield geodomain object. x1,y1 Matrix index SW corner subdomain. x2,y2 Matrix index NE corner subdomain. reso Resolution subdomain. may positive     integer. reso integer larger 1, resolution     dropped taking subset points interval reso. Default 1 (gridpoints     kept). x,y Matrix index central point 'zoomed' grid. zoom number matrix points either side central     point subgrid.","code":""},{"path":"/reference/subgrid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Defining subdomains — subgrid","text":"geofield object regular subset grid. input geodomain, result .","code":""},{"path":"/reference/subgrid.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Defining subdomains — subgrid","text":"zoomgrid fact just wrapper particular type call subgrid, bit general. Note interpolation kind involved routines. simply subselection grid boxes. also interpreted version regrid(...,method=\"closest\").","code":""},{"path":[]},{"path":"/reference/upscale.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregating to another, coarser domain — upscale","title":"Aggregating to another, coarser domain — upscale","text":"Change resolution/geometry geofield averaging.","code":""},{"path":"/reference/upscale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregating to another, coarser domain — upscale","text":"","code":"upscale(infield, factor=NULL, newdomain=NULL, method=\"mean\", weights=0, ...) upscale_factor(infield, factor, method=\"mean\", ...) upscale_regrid(infield, newdomain, method=\"mean\", weights=NULL, ...) upscale_regrid_init(olddomain, newdomain)"},{"path":"/reference/upscale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregating to another, coarser domain — upscale","text":"infield geofield object. factor given, new grid simply coarser version original. factor vector 2 integers (scalar, value repeated). dscribes many gridd cells X Y direction aggregated one new grid box. newdomain, olddomain geodomain geofield. second case domain attribute used. method aggregation method. aggregating given factor, function like mean, median, max... ergridding, 'mean' supported. weights Initialised weights faster computation, output upscale_regrid_init. used regridding (factor=NULL). ... Options method (e.g. na.rm=TRUE).","code":""},{"path":"/reference/upscale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregating to another, coarser domain — upscale","text":"geofield object.","code":""},{"path":"/reference/upscale.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Aggregating to another, coarser domain — upscale","text":"routines aggregate grid boxes original domain new domain. factor used, result exactly expected. regridding different domain, average taken original cells whose center falls inside new grid cell. compensation (yet?) partial grid cells.","code":""},{"path":[]},{"path":"/reference/utilities.html","id":null,"dir":"Reference","previous_headings":"","what":"Simple utilities — utilities","title":"Simple utilities — utilities","text":"simple functions may useful. Just simple shortcuts.","code":""},{"path":"/reference/utilities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simple utilities — utilities","text":"","code":"i2a(i,n) trim(x) matsum(x, ...) checknull(x, default=0)"},{"path":"/reference/utilities.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simple utilities — utilities","text":",n integers x matrix array (matsum), character string(trim)... default value given x=NULL. ... arguments summary .","code":""},{"path":"/reference/utilities.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simple utilities — utilities","text":"i2a formats integer required length zero padding. matsum simply summary matrix columns , .e. x treated vector. trim strip sleading trailing blanks string. checknull replace NULL value default value.","code":""},{"path":"/reference/vecplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plotting vector fields — vecplot","title":"Plotting vector fields — vecplot","text":"simple primitive function plotting vector   fields.","code":""},{"path":"/reference/vecplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plotting vector fields — vecplot","text":"","code":"vecplot(U,V,x=1:dim(U)[1],y=1:dim(U)[2],thinx=10,thiny=thinx,                 aspect, add=FALSE, arrowcolor=1, arrowsize=.03,                 maxscale=.9, lwd=.5, rescale, xlab=\"\", ylab=\"\", ...)"},{"path":"/reference/vecplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plotting vector fields — vecplot","text":"U,V 2 matrices containing X Y components field. x,y 2 vectors x y coordinates grid points. thinx,thiny Thinning grid points. Vectors drawn                       every thinx,thiny points. aspect Aspect ratio. default set 1, .e. X Y     axes units. e.g. Lat-Lon maps, wrong! arrowcolor Color vectors. arrowsize Size actual \"arrow\" part vector. maxscale Scaling vector lengths vs grid interval. add TRUE, vectors added existing plot. lwd line width rescale Another way rescale vector lengths. xlab,ylab Labels X Y axes. Default leave clear. ... Options 'arrows'.","code":""},{"path":"/reference/vecplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plotting vector fields — vecplot","text":"vector field plot.","code":""},{"path":"/reference/vecplot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plotting vector fields — vecplot","text":"vector field plotted using \"arrow\" function. quite    promitive. Also, means vectors bound    co-ordinate system underlying plot. words: X    Y axis units. case,    aspect ratio (asp) adapted manually.","code":""},{"path":"/reference/wind.dirspeed.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate wind direction and speed from u and v components. — wind.dirspeed","title":"Calculate wind direction and speed from u and v components. — wind.dirspeed","text":"wind.dispeed simple calculation wind direction given u v. Notice already converted natural directions along E/N axes. wind.uv inverse.","code":""},{"path":"/reference/wind.dirspeed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate wind direction and speed from u and v components. — wind.dirspeed","text":"","code":"wind.dirspeed(u, v,fieldname=c(\"Wind direction\",\"Wind speed\"),rad=FALSE) wind.uv(wspeed,wdir,fieldname=c(\"U\",\"V\"),rad=FALSE)"},{"path":"/reference/wind.dirspeed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate wind direction and speed from u and v components. — wind.dirspeed","text":"u,v u v components model wind. may either vectors geofield objects. must rotated true N/E axis wind direction correct! u may also list components (u,v), case v missing. wspeed,wdir Wind speed direction direction (radians degrees). fieldname character string giving names result. necessary u v geofield objects. rad TRUE, wind direction radians. FALSE, (decimal) degrees.","code":""},{"path":"/reference/wind.dirspeed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate wind direction and speed from u and v components. — wind.dirspeed","text":"list elements wdir wspeed.","code":""},{"path":"/reference/wind.dirspeed.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate wind direction and speed from u and v components. — wind.dirspeed","text":"Wind direction given degrees default. wind speed lower 10E-6, result set NA.","code":""},{"path":[]}]
